{"ast":null,"code":"var _jsxFileName = \"E:\\\\reacttut\\\\updatedtodoapp\\\\src\\\\component\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport todo from '../images/todo.svg';\nimport '../App.css'; // to get data from local storage\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getLocalItems = () => {\n  let list = localStorage.getItem('lists');\n  console.log(list);\n};\n\nconst Todo = () => {\n  _s();\n\n  const [InputData, setInputData] = useState();\n  const [items, setItems] = useState([]);\n  const [toggleBtn, setToggleBtn] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n\n  const addItem = () => {\n    if (!InputData) {\n      alert('plzz fill the fields');\n    } else if (InputData && !toggleBtn) {\n      setItems(items.map(elem => {\n        if (elem.id === isEditItem) {\n          return { ...elem,\n            name: InputData\n          };\n        }\n\n        return elem;\n      }));\n      setToggleBtn(true);\n      setInputData('');\n      setIsEditItem(null);\n    } else {\n      const allInputData = {\n        id: new Date().getTime().toString(),\n        name: InputData\n      };\n      setItems([...items, allInputData]);\n      setInputData('');\n    }\n  };\n\n  const deleteItem = index => {\n    // console.log(id);\n    const updatedItem = items.filter(elem => {\n      return index != elem.id;\n    });\n    setItems(updatedItem);\n  };\n\n  const editItem = id => {\n    let newEditItem = items.find(elem => {\n      return elem.id === id;\n    });\n    console.log(newEditItem);\n    setToggleBtn(false);\n    setInputData(newEditItem.name);\n    setIsEditItem(id);\n  };\n\n  const deleteAll = () => {\n    // console.log(id);\n    setItems([]);\n  }; //   add data to localstorage\n\n\n  useEffect(() => {\n    localStorage.setItem('lists', JSON.stringify(items));\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-div\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"child-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: todo,\n          alt: \"todo-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n          children: \"Add your List Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addItems\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uD83D\\uDE0D Add items\",\n          value: InputData,\n          onChange: e => setInputData(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), toggleBtn ? /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-plus add-btn\",\n          \"aria-hidden\": \"true\",\n          title: \"Add Item\",\n          onClick: addItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-edit add-btn\",\n          \"aria-hidden\": \"true\",\n          title: \"Update Item\",\n          onClick: addItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showItems\",\n        children: items.map(elem => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"eachItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: elem.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo-btn\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-edit add-btn\",\n                \"aria-hidden\": \"true\",\n                title: \"Edit Item\",\n                onClick: () => editItem(elem.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-trash add-btn\",\n                \"aria-hidden\": \"true\",\n                title: \"Delete Item\",\n                onClick: () => deleteItem(elem.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 1\n            }, this)]\n          }, elem.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn effect04\",\n        \"data-sm-link-text\": \"Remove All\",\n        onClick: deleteAll,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" Check List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 98\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todo, \"sJESNtgdoKVhIT9eBRDsb655d1Y=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["E:/reacttut/updatedtodoapp/src/component/Todo.js"],"names":["React","useState","useEffect","todo","getLocalItems","list","localStorage","getItem","console","log","Todo","InputData","setInputData","items","setItems","toggleBtn","setToggleBtn","isEditItem","setIsEditItem","addItem","alert","map","elem","id","name","allInputData","Date","getTime","toString","deleteItem","index","updatedItem","filter","editItem","newEditItem","find","deleteAll","setItem","JSON","stringify","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport todo from '../images/todo.svg'\r\nimport '../App.css';\r\n\r\n// to get data from local storage\r\nconst getLocalItems =()=>{\r\n    let list = localStorage.getItem('lists')\r\n    console.log(list);\r\n}\r\n\r\nconst Todo = () => {\r\n\r\n    const [InputData,setInputData] = useState();\r\n    const [items,setItems] = useState([]);\r\n    const [toggleBtn,setToggleBtn] = useState(true);\r\n    const [isEditItem,setIsEditItem] = useState(null);\r\n\r\n\r\n    const addItem = () => {\r\n        if(!InputData){\r\nalert('plzz fill the fields');\r\n        }else if(InputData && !toggleBtn){\r\n            setItems(\r\n                items.map((elem) => {\r\n                    if(elem.id === isEditItem){\r\n                        return {...elem,name:InputData}\r\n                    }\r\n                    return elem;\r\n                })\r\n            )\r\n            setToggleBtn(true);\r\n            setInputData('')\r\n            setIsEditItem(null);\r\n        }\r\n        else {\r\n    const allInputData = {id : new Date().getTime().toString(), name: InputData}\r\n      setItems([...items,allInputData]);\r\n      setInputData('');\r\n        }\r\n    }\r\n\r\nconst deleteItem =(index)=>{\r\n    // console.log(id);\r\n    const updatedItem = items.filter((elem) => {\r\n           return index !=elem.id;\r\n    });\r\n     setItems(updatedItem);\r\n    \r\n}\r\nconst editItem =(id) =>{\r\n    let newEditItem = items.find((elem) =>{\r\n        return elem.id === id;\r\n    });\r\n    console.log(newEditItem);\r\n    setToggleBtn(false);\r\n    setInputData(newEditItem.name)\r\n    setIsEditItem(id);\r\n}\r\n\r\nconst deleteAll =()=>{\r\n    // console.log(id);\r\n\r\n    setItems([])\r\n    \r\n}\r\n//   add data to localstorage\r\n\r\n  useEffect(() => {\r\n      localStorage.setItem('lists', JSON.stringify(items))\r\n  }, [items]);\r\n\r\n    return (\r\n        <div className='main-div'>\r\n        <div className='child-div'>\r\n            <figure>\r\n                <img src={todo} alt='todo-logo' ></img>\r\n                <figcaption>Add your List Here</figcaption>\r\n            </figure>\r\n            <div className='addItems'>\r\n                <input type=\"text\" placeholder='😍 Add items' value={InputData} onChange={(e) => setInputData(e.target.value)}/>\r\n\r\n                {\r\n                    toggleBtn ? <i class=\"fa fa-plus add-btn\" aria-hidden=\"true\" title='Add Item' onClick={addItem}></i>:\r\n                    <i class=\"fa fa-edit add-btn\" aria-hidden=\"true\" title='Update Item' onClick={addItem}></i>\r\n                }\r\n                \r\n            </div>\r\n            <div className='showItems'>\r\n\r\n            {\r\n                items.map((elem) =>  {\r\n                   return(\r\n                <div className='eachItem' key={elem.id}>\r\n                <h3>{elem.name}</h3>\r\n<div className='todo-btn' >\r\n                <i class=\"fa fa-edit add-btn\" aria-hidden=\"true\" title='Edit Item' onClick={() =>editItem(elem.id)}></i>\r\n                <i class=\"fa fa-trash add-btn\" aria-hidden=\"true\" title='Delete Item' onClick={() =>deleteItem(elem.id)}></i>\r\n                </div>  \r\n                </div>\r\n \r\n                   )\r\n                })\r\n            }\r\n            \r\n            </div>\r\n\r\n            <button className='btn effect04' data-sm-link-text =\"Remove All\" onClick={deleteAll}><span> Check List</span></button>\r\n        </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}